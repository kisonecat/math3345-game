{"name": "Math 3345H", "version": "1.0.0", "languages": ["en"], "translated_name": "0", "devmode": true, "library_zip_fn": "Math 3345H-1.0.0-library.zip", "introData": {"name": "", "problemIndex": -1, "objects": [{"type": "text", "content": "1"}]}, "worlds": [{"name": "2", "levels": [{"name": "", "problemIndex": 5, "objects": [{"type": "lean", "content": "3", "hidden": false}, {"type": "text", "content": "4"}, {"type": "lean", "content": "5", "hidden": true}, {"type": "text", "content": "6"}, {"type": "lean", "content": "7", "hidden": false}, {"type": "lemma", "text": "8", "lean": "lemma use_exact (h : P) (k : Q) : P := \n", "sideBar": false, "firstProofLineNumber": 25, "lastProofLineNumber": 27, "textBefore": "import tactic\n\n/-\n# Level 1 : Using exact \n-/\n\nnamespace math3345 -- hide\n\n/-\nP and Q are propositions.\n-/\n\nvariable P : Prop\nvariable Q : Prop\n\n/- Lemma : no-side-bar\n\n`h` is evidence that `P` and `k` is evidence for `Q`.\n\nReplace `sorry` with `exact h` or `exact k` to complete the proof of `P`.\n\n-/\nlemma use_exact (h : P) (k : Q) : P := \nbegin\n", "proof": "\n  sorry,\n", "proof_hint": "sorry", "textAfter": "\nend\n\nend math3345 -- hide\n\n\n", "height": 3, "editorText": "sorry", "lineOffset": 24, "name": "use_exact", "statement": "(h : P) (k : Q) : P"}, {"type": "lean", "content": "9", "hidden": true}]}, {"name": "", "problemIndex": 5, "objects": [{"type": "lean", "content": "10", "hidden": false}, {"type": "text", "content": "11"}, {"type": "lean", "content": "12", "hidden": true}, {"type": "text", "content": "13"}, {"type": "lean", "content": "14", "hidden": false}, {"type": "lemma", "text": "15", "lean": "lemma and_elim_1 (h : P \u2227 Q) : Q := \n", "sideBar": false, "firstProofLineNumber": 25, "lastProofLineNumber": 27, "textBefore": "import tactic\n\n/-\n# Level 2 : Using a conjunction \n-/\n\nnamespace math3345 -- hide\n\n/-\nP and Q are propositions.\n-/\n\nvariable P : Prop\nvariable Q : Prop\n\n/- Lemma : no-side-bar\n\n`h` is evidence that `P \u2227 Q`, and we can extract evidence for `P` by\nusing `h.left` and extract evidence for `Q` with `h.right`.  Then\nfinish the proof with `exact`.\n\n-/\nlemma and_elim_1 (h : P \u2227 Q) : Q := \nbegin\n", "proof": "\n  sorry,\n", "proof_hint": "sorry", "textAfter": "\nend\n\nend math3345\n\n", "height": 3, "editorText": "sorry", "lineOffset": 24, "name": "and_elim_1", "statement": "(h : P \u2227 Q) : Q"}, {"type": "lean", "content": "16", "hidden": false}]}]}], "texts": [["Math 3345H", "# Math 3345H, version 1.0.0.\n\n## By Jim Fowler\n\n# What is this game?\n\nMath 3345H at Ohio State is the \"Foundations of Higher Mathematics\"\ncourse, and as such, it serves as an introduction to proof.  The\ncourse is focused on writing, but I suspect formal proofs (like those\nyou can explore via this system) may provide additional insight.\n\n# Credits\n\nThis is clearly based on the <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/\">Natural Number Game</a> by Kevin Buzzard.  The backend is <a href=\"https://github.com/mpedramfar/Lean-game-maker\">the Lean game maker</a> by \nMohammad Pedramfar.  The game maker itself depends on code from Bryan Gin-ge Chen and Patrick Massot.\n\n", "Propositions", "import tactic\n", "# Level 1 : Using exact \n", "namespace math3345 -- hide\n", "P and Q are propositions.\n", "variable P : Prop\nvariable Q : Prop\n", "`h` is evidence that `P` and `k` is evidence for `Q`.\nReplace `sorry` with `exact h` or `exact k` to complete the proof of `P`.\n", "end math3345 -- hide\n", "import tactic\n", "# Level 2 : Using a conjunction \n", "namespace math3345 -- hide\n", "P and Q are propositions.\n", "variable P : Prop\nvariable Q : Prop\n", "`h` is evidence that `P \u2227 Q`, and we can extract evidence for `P` by\nusing `h.left` and extract evidence for `Q` with `h.right`.  Then\nfinish the proof with `exact`.\n", "end math3345\n"]]}